[package]
name = "dradis"
version = "0.3.3"
authors = ["Maxime Ripard <maxime@cerno.tech>"]
edition = "2021"
description = "HDMI Test Application"
license-file = "LICENSE"

[profile.release]
codegen-units = 1
lto = "fat"
opt-level = 3
panic = "abort"

[dependencies]
anyhow = "1.0.72"
byteorder = "1.4.3"
clap = { version = "4.3.19", features = ["cargo"] }
dma-buf = "0.3.0"
dma-heap = "0.2.1"
edid = { git = "https://github.com/mripard/edid-rs.git" }
image = { version = "0.24.6", default-features = false }
libc = "0.2.147"
log = "0.4.19"
rqrr = "0.6.0"
serde = { version = "1.0.181", features = ["derive"] }
serde_json = "1.0.104"
serde_with = "3.1.0"
serde_yaml = "0.9.25"
simplelog = "0.12.1"
thiserror = "1.0.44"
twox-hash = "1.6.3"

[dependencies.v4lise]
path = "lib/v4lise"

[package.metadata.deb]
section = "utility"
priority = "optional"
assets = [
	["target/release/dradis", "usr/bin/", "755"],
	["samples/test-single-mode-720p.yaml", "usr/share/dradis/samples/", "644"],
]

# It's a bit of a hack, but we can't run cargo deb within cross until cross
# allows us to:
# https://github.com/cross-rs/cross/issues/716
#
# Since we're not running it within the container, the host libraries are used
# by cargo-deb and it will pick the host C library as a dependency, even though
# it might have been built with something else entirely.
#
# Let's force the current container C library version.
depends = "libc6:arm64 (>= 2.17)"
