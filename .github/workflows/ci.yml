name: CI

on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build
        uses: "actions-rs/cargo@v1"
        with:
          command: build
          args: --all-features --all-targets --verbose

  clippy:
    name: Clippy
    runs-on: ubuntu-latest

    permissions:
      checks: write

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true

      - name: Check clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

  format:
    name: Rustfmt
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
          override: true

      - name: Check Format
        uses: "actions-rs/cargo@v1"
        with:
          command: "fmt"
          args: "--all -- --check"

  tests:
    name: Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Run Tests
        uses: "actions-rs/cargo@v1"
        with:
          command: test
          args: --all-features --verbose

  build_deb_pkg_test:
    name: Build Test Debian Package
    needs: [ build, tests ]
    uses: ./.github/workflows/deb_pkg.yml
    if: ${{ github.event_name == 'pull_request'}}
    with:
      distribution-version: bookworm
      package-revision: ${{ github.event.pull_request.number }}

  dependabot:
    runs-on: ubuntu-latest
    needs: [ build, tests, build_deb_pkg_test ]

    permissions:
      pull-requests: write
      contents: write

    if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'}}
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1.1.1
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Enable auto-merge for Dependabot PRs
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
